// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext {
        androidCompileSdkVersion = 29
        androidMinSdkVersion = 21
        androidTargetSdkVersion = 29

        kotlinVersion = '1.4.10'
        appCompatVersion = '1.2.0'
        androidCoreVersion = '1.3.2'
        constaintLayoutVersion = '2.0.2'
        coroutinesCoreVersion = '1.3.7'
        roomVersion = '2.2.5'
        roomDebuggerVersion = '1.0.6'
        daggerVersion = '2.27'
        lifecycleVersion = "2.2.0"
        javaxInjectVersion = "1"
        androidFragmentVersion = "1.2.5"
        preferenceVersion = "1.1.1"
        firebaseAnalyticsVersion = "17.5.0"
        firebaseAuthVersion = "19.4.0"
        materialVersion = "1.2.1"
        firebaseRemoteConfigVersion = "19.2.0"
        firebaseFireStoreVersion = "21.7.0"
        glideVersion = "4.11.0"
        firebaseStorageVersion = "19.1.1"
        imageproviderVersion = "0.1.0"
        dexterVersion = "6.2.1"
        fragmentKtxVersion = "1.2.0"
        retrofitVersion = "2.7.2"
        moshiVersion = "1.9.2"
        composeVersion = "1.0.0-alpha07"

        jUnitVersion = '4.13'
        espressoVersion = '3.3.0'
        androidTestJunitVersion = '1.1.2'
        mockWebServerVersion = '4.4.0'
        archTestingVersion = '2.1.0'
        mockitoKotlinVersion = '2.2.0'
    }
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0-alpha16'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.google.gms:google-services:4.3.4'
        classpath 'org.jacoco:org.jacoco.core:0.8.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
